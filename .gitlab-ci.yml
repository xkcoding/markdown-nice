variables:
  DOCKER_REGION: "registry.cn-hangzhou.aliyuncs.com"
  DOCKER_NAMESPACE: "xkcoding"
  APP_NAME: "mdnice"
  BUILD_IMAGE: "$DOCKER_REGION/$DOCKER_NAMESPACE/nodebuild:14.3.0-alpine3.11"
  IMAGE_NAME: "$DOCKER_REGION/$DOCKER_NAMESPACE/$APP_NAME:$CI_COMMIT_REF_NAME"
  DOCKER_FILE_PATH: "./Dockerfile"
  APP_DOMAIN: "md.xkcoding.com"
  CONTAINER_PORT: 80

stages:
  - 下载依赖
  - 编译构建
  - 打包镜像
  - 部署服务
  - 服务下线

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - build/
    - node_modules/

下载依赖:
  stage: 下载依赖
  image: ${BUILD_IMAGE}
  tags:
    - docker
  script:
    - ls -a
    - yarn install
    - ls -a
  rules:
    - changes:
        - package.json

编译构建:
  stage: 编译构建
  image: ${BUILD_IMAGE}
  tags:
    - docker
  script:
    - ls -a
    - yarn run build
    - ls -a build/

打包镜像:
  stage: 打包镜像
  image: docker:latest
  services:
    - name: docker:dind
  tags:
    - docker
  script:
    - ls -a
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGION}
    - docker build -t ${IMAGE_NAME} -f ${DOCKER_FILE_PATH} .
    - docker push ${IMAGE_NAME}
    - docker rmi ${IMAGE_NAME}

部署服务:
  stage: 部署服务
  tags:
    - deploy
  script:
    - ls -a
    - sed -i "s#__IMAGE_NAME__#${IMAGE_NAME}#g" ${APP_NAME}.yml
    - sed -i "s#__APP_NAME__#${APP_NAME}#g" ${APP_NAME}.yml
    - sed -i "s#__APP_DOMAIN__#${APP_DOMAIN}#g" ${APP_NAME}.yml
    - sed -i "s#__CONTAINER_PORT__#${CONTAINER_PORT}#g" ${APP_NAME}.yml
    - cat ${APP_NAME}.yml
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGION}
    - docker stack deploy -c ${APP_NAME}.yml ${APP_NAME}
  cache:
    policy: pull

服务下线:
  stage: 服务下线
  tags:
    - deploy
  script:
    - ls -a
    - sed -i "s#__IMAGE_NAME__#${IMAGE_NAME}#g" ${APP_NAME}.yml
    - sed -i "s#__APP_NAME__#${APP_NAME}#g" ${APP_NAME}.yml
    - sed -i "s#__APP_DOMAIN__#${APP_DOMAIN}#g" ${APP_NAME}.yml
    - sed -i "s#__CONTAINER_PORT__#${CONTAINER_PORT}#g" ${APP_NAME}.yml
    - cat ${APP_NAME}.yml
    - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} ${DOCKER_REGION}
    - docker stack rm ${APP_NAME}
  when: manual
  cache:
    policy: pull